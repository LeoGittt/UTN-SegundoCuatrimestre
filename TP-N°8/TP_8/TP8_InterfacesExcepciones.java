import java.util.Scanner;

// Trabajo Pr√°ctico 8: Interfaces y Excepciones - Archivo Integrador
// Este archivo ejecuta todos los ejercicios del TP8
// Todas las clases est√°n definidas en sus archivos separados siguiendo buenas pr√°cticas de Java

public class TP8_InterfacesExcepciones {
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.println("===============================================");
        System.out.println("  TRABAJO PR√ÅCTICO 8: INTERFACES Y EXCEPCIONES");
        System.out.println("===============================================");
        
        while (true) {
            mostrarMenu();
            System.out.print("\nIngrese su opci√≥n: ");
            
            try {
                int opcion = scanner.nextInt();
                scanner.nextLine(); // Consumir el salto de l√≠nea
                
                switch (opcion) {
                    case 1:
                        ejecutarSistemaEcommerce();
                        break;
                    case 2:
                        ejecutarDivisionSegura();
                        break;
                    case 3:
                        ejecutarConversionNumero();
                        break;
                    case 4:
                        ejecutarLecturaArchivo();
                        break;
                    case 5:
                        ejecutarValidadorEdad();
                        break;
                    case 6:
                        ejecutarTryWithResources();
                        break;
                    case 7:
                        ejecutarTodosLosEjercicios();
                        break;
                    case 8:
                        mostrarConceptosImplementados();
                        break;
                    case 0:
                        System.out.println("¬°Gracias por usar el programa!");
                        scanner.close();
                        return;
                    default:
                        System.out.println("‚ùå Opci√≥n no v√°lida. Intente nuevamente.");
                }
                
            } catch (Exception e) {
                System.out.println("‚ùå Error: Ingrese un n√∫mero v√°lido.");
                scanner.nextLine(); // Limpiar buffer
            }
            
            esperarContinuar(scanner);
        }
    }
    
    private static void mostrarMenu() {
        System.out.println("\n" + "=".repeat(50));
        System.out.println("SELECCIONE EL EJERCICIO A EJECUTAR:");
        System.out.println("=".repeat(50));
        System.out.println("PARTE 1: INTERFACES");
        System.out.println("  1. Sistema de E-commerce completo");
        System.out.println();
        System.out.println("PARTE 2: EXCEPCIONES");
        System.out.println("  2. Divisi√≥n segura (ArithmeticException)");
        System.out.println("  3. Conversi√≥n de n√∫mero (NumberFormatException)");
        System.out.println("  4. Lectura de archivo (FileNotFoundException)");
        System.out.println("  5. Validador de edad (Excepci√≥n personalizada)");
        System.out.println("  6. Try-with-resources (IOException)");
        System.out.println();
        System.out.println("OPCIONES ADICIONALES");
        System.out.println("  7. Ejecutar todos los ejercicios");
        System.out.println("  8. Mostrar conceptos implementados");
        System.out.println("  0. Salir");
        System.out.println("=".repeat(50));
    }
    
    private static void ejecutarSistemaEcommerce() {
        System.out.println("\nüõí EJECUTANDO: Sistema de E-commerce con Interfaces");
        System.out.println("=".repeat(60));
        EjercicioEcommerce.ejecutarSistemaEcommerce();
    }
    
    private static void ejecutarDivisionSegura() {
        System.out.println("\n‚ûó EJECUTANDO: Divisi√≥n Segura");
        System.out.println("=".repeat(40));
        DivisionSegura.ejecutarDivisionSegura();
    }
    
    private static void ejecutarConversionNumero() {
        System.out.println("\nüî¢ EJECUTANDO: Conversi√≥n de N√∫mero");
        System.out.println("=".repeat(40));
        ConversionNumero.ejecutarConversion();
    }
    
    private static void ejecutarLecturaArchivo() {
        System.out.println("\nüìÑ EJECUTANDO: Lectura de Archivo (tradicional)");
        System.out.println("=".repeat(50));
        LecturaArchivo.ejecutarLecturaArchivo();
    }
    
    private static void ejecutarValidadorEdad() {
        System.out.println("\nüéÇ EJECUTANDO: Validador de Edad");
        System.out.println("=".repeat(40));
        ValidadorEdad.ejecutarValidacionEdad();
    }
    
    private static void ejecutarTryWithResources() {
        System.out.println("\nüìÇ EJECUTANDO: Try-with-Resources");
        System.out.println("=".repeat(40));
        LecturaArchivoTryWithResources.ejecutarLecturaConTryWithResources();
    }
    
    private static void ejecutarTodosLosEjercicios() {
        System.out.println("\nüöÄ EJECUTANDO: TODOS LOS EJERCICIOS");
        System.out.println("=".repeat(50));
        
        System.out.println("Parte 1: Interfaces");
        ejecutarSistemaEcommerce();
        
        System.out.println("\n" + "=".repeat(50));
        System.out.println("Parte 2: Excepciones");
        
        // Nota: Para la demostraci√≥n completa, se ejecutar√≠an todos los ejercicios
        // En un entorno real, algunos requieren interacci√≥n del usuario
        System.out.println("Los ejercicios de excepciones requieren interacci√≥n manual.");
        System.out.println("Use las opciones individuales (2-6) para ejecutarlos.");
    }
    
    private static void mostrarConceptosImplementados() {
        System.out.println("\nüìö CONCEPTOS DE JAVA IMPLEMENTADOS EN EL TP8");
        System.out.println("=".repeat(60));
        
        System.out.println("üîπ INTERFACES:");
        System.out.println("  ‚úÖ Definici√≥n de contratos (Pagable, Pago, Notificable)");
        System.out.println("  ‚úÖ Implementaci√≥n m√∫ltiple (implements)");
        System.out.println("  ‚úÖ Herencia de interfaces (PagoConDescuento extends Pago)");
        System.out.println("  ‚úÖ Polimorfismo con interfaces");
        System.out.println("  ‚úÖ M√©todos abstractos en interfaces");
        
        System.out.println("\nüîπ EXCEPCIONES:");
        System.out.println("  ‚úÖ Try-catch-finally");
        System.out.println("  ‚úÖ Excepciones checked (IOException, FileNotFoundException)");
        System.out.println("  ‚úÖ Excepciones unchecked (ArithmeticException, NumberFormatException)");
        System.out.println("  ‚úÖ Excepciones personalizadas (EdadInvalidaException)");
        System.out.println("  ‚úÖ Try-with-resources");
        System.out.println("  ‚úÖ Throw y throws");
        System.out.println("  ‚úÖ Manejo de m√∫ltiples excepciones");
        
        System.out.println("\nüîπ BUENAS PR√ÅCTICAS:");
        System.out.println("  ‚úÖ Cada clase en su propio archivo");
        System.out.println("  ‚úÖ Separaci√≥n de responsabilidades");
        System.out.println("  ‚úÖ C√≥digo reutilizable y mantenible");
        System.out.println("  ‚úÖ Manejo robusto de errores");
        System.out.println("  ‚úÖ Liberaci√≥n autom√°tica de recursos");
        
        System.out.println("\nüîπ PATRONES DE DISE√ëO:");
        System.out.println("  ‚úÖ Strategy Pattern (diferentes m√©todos de pago)");
        System.out.println("  ‚úÖ Observer Pattern (notificaciones)");
        System.out.println("  ‚úÖ Template Method (estructura com√∫n de pagos)");
    }
    
    private static void esperarContinuar(Scanner scanner) {
        System.out.println("\n" + "=".repeat(50));
        System.out.println("Presione Enter para volver al men√∫ principal...");
        scanner.nextLine();
    }
}